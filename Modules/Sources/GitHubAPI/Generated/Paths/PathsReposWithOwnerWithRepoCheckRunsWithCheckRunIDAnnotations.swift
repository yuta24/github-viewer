// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.CheckRuns.WithCheckRunID {
    public var annotations: Annotations {
        Annotations(path: path + "/annotations")
    }

    public struct Annotations {
        /// Path: `/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations`
        public let path: String

        /// List check run annotations
        ///
        /// Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/checks#list-check-run-annotations)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.CheckAnnotation]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "checks/list-annotations")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
