// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Actions.Runs {
    public func runID(_ runID: Int) -> WithRunID {
        WithRunID(path: "\(path)/\(runID)")
    }

    public struct WithRunID {
        /// Path: `/repos/{owner}/{repo}/actions/runs/{run_id}`
        public let path: String

        /// Get a workflow run
        ///
        /// Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#get-a-workflow-run)
        public func get(excludePullRequests: Bool? = nil) -> Request<GitHubAPI.WorkflowRun> {
            Request(method: "GET", url: path, query: makeGetQuery(excludePullRequests), id: "actions/get-workflow-run")
        }

        private func makeGetQuery(_ excludePullRequests: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(excludePullRequests, forKey: "exclude_pull_requests")
            return encoder.items
        }

        /// Delete a workflow run
        ///
        /// Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is
        /// private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use
        /// this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#delete-a-workflow-run)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "actions/delete-workflow-run")
        }
    }
}
