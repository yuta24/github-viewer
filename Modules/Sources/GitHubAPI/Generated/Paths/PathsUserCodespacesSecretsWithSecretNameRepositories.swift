// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.User.Codespaces.Secrets.WithSecretName {
    public var repositories: Repositories {
        Repositories(path: path + "/repositories")
    }

    public struct Repositories {
        /// Path: `/user/codespaces/secrets/{secret_name}/repositories`
        public let path: String

        /// List selected repositories for a user secret
        ///
        /// List the repositories that have been granted the ability to use a user's codespace secret.
        /// 
        /// You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.
        /// 
        /// GitHub Apps must have read access to the `codespaces_user_secrets` user permission and write access to the `codespaces_secrets` repository permission on all referenced repositories to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/codespaces#list-selected-repositories-for-a-user-secret)
        public var get: Request<GetResponse> {
            Request(method: "GET", url: path, id: "codespaces/list-repositories-for-secret-for-authenticated-user")
        }

        public struct GetResponse: Decodable {
            public var totalCount: Int
            public var repositories: [GitHubAPI.MinimalRepository]

            public init(totalCount: Int, repositories: [GitHubAPI.MinimalRepository]) {
                self.totalCount = totalCount
                self.repositories = repositories
            }

            public init(from decoder: Decoder) throws {
                let values = try decoder.container(keyedBy: StringCodingKey.self)
                self.totalCount = try values.decode(Int.self, forKey: "total_count")
                self.repositories = try values.decode([GitHubAPI.MinimalRepository].self, forKey: "repositories")
            }
        }

        /// Set selected repositories for a user secret
        ///
        /// Select the repositories that will use a user's codespace secret.
        /// 
        /// You must authenticate using an access token with the `codespace` or `codespace:secrets` scope to use this endpoint. User must have Codespaces access to use this endpoint.
        /// 
        /// GitHub Apps must have write access to the `codespaces_user_secrets` user permission and write access to the `codespaces_secrets` repository permission on all referenced repositories to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/codespaces#set-selected-repositories-for-a-user-secret)
        public func put(selectedRepositoryIDs: [Int]) -> Request<Void> {
            Request(method: "PUT", url: path, body: ["selected_repository_ids": selectedRepositoryIDs], id: "codespaces/set-repositories-for-secret-for-authenticated-user")
        }
    }
}
