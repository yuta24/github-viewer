// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Enterprises.WithEnterprise.Actions.RunnerGroups.WithRunnerGroupID {
    public var organizations: Organizations {
        Organizations(path: path + "/organizations")
    }

    public struct Organizations {
        /// Path: `/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations`
        public let path: String

        /// List organization access to a self-hosted runner group in an enterprise
        ///
        /// Lists the organizations with access to a self-hosted runner group.
        /// 
        /// You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<GetResponse> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "enterprise-admin/list-org-access-to-self-hosted-runner-group-in-enterprise")
        }

        public struct GetResponse: Decodable {
            public var totalCount: Double
            public var organizations: [GitHubAPI.OrganizationSimple]

            public init(totalCount: Double, organizations: [GitHubAPI.OrganizationSimple]) {
                self.totalCount = totalCount
                self.organizations = organizations
            }

            public init(from decoder: Decoder) throws {
                let values = try decoder.container(keyedBy: StringCodingKey.self)
                self.totalCount = try values.decode(Double.self, forKey: "total_count")
                self.organizations = try values.decode([GitHubAPI.OrganizationSimple].self, forKey: "organizations")
            }
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }

        /// Set organization access for a self-hosted runner group in an enterprise
        ///
        /// Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.
        /// 
        /// You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise)
        public func put(selectedOrganizationIDs: [Int]) -> Request<Void> {
            Request(method: "PUT", url: path, body: ["selected_organization_ids": selectedOrganizationIDs], id: "enterprise-admin/set-org-access-to-self-hosted-runner-group-in-enterprise")
        }
    }
}
