// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Commits.WithRef {
    public var statuses: Statuses {
        Statuses(path: path + "/statuses")
    }

    public struct Statuses {
        /// Path: `/repos/{owner}/{repo}/commits/{ref}/statuses`
        public let path: String

        /// List commit statuses for a reference
        ///
        /// Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.
        /// 
        /// This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.
        ///
        /// [API method documentation](https://docs.github.com/rest/commits/statuses#list-commit-statuses-for-a-reference)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.Status]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "repos/list-commit-statuses-for-ref")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
