// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Users.WithUsername.Events.Orgs {
    public func org(_ org: String) -> WithOrg {
        WithOrg(path: "\(path)/\(org)")
    }

    public struct WithOrg {
        /// Path: `/users/{username}/events/orgs/{org}`
        public let path: String

        /// List organization events for the authenticated user
        ///
        /// This is the user's organization dashboard. You must be authenticated as the user to view this.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/activity#list-organization-events-for-the-authenticated-user)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.Event]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "activity/list-org-events-for-authenticated-user")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
