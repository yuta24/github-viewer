// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Orgs.WithOrg.Actions.Secrets.WithSecretName.Repositories {
    public func repositoryID(_ repositoryID: Int) -> WithRepositoryID {
        WithRepositoryID(path: "\(path)/\(repositoryID)")
    }

    public struct WithRepositoryID {
        /// Path: `/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}`
        public let path: String

        /// Add selected repository to an organization secret
        ///
        /// Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#add-selected-repository-to-an-organization-secret)
        public var put: Request<Void> {
            Request(method: "PUT", url: path, id: "actions/add-selected-repo-to-org-secret")
        }

        /// Remove selected repository from an organization secret
        ///
        /// Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#remove-selected-repository-from-an-organization-secret)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "actions/remove-selected-repo-from-org-secret")
        }
    }
}
