// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.User.Packages.WithPackageType {
    public func packageName(_ packageName: String) -> WithPackageName {
        WithPackageName(path: "\(path)/\(packageName)")
    }

    public struct WithPackageName {
        /// Path: `/user/packages/{package_type}/{package_name}`
        public let path: String

        /// Get a package for the authenticated user
        ///
        /// Gets a specific package for a package owned by the authenticated user.
        /// 
        /// To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        /// If `package_type` is not `container`, your token must also include the `repo` scope.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/packages#get-a-package-for-the-authenticated-user)
        public var get: Request<GitHubAPI.Package> {
            Request(method: "GET", url: path, id: "packages/get-package-for-authenticated-user")
        }

        /// Delete a package for the authenticated user
        ///
        /// Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.
        /// 
        /// To use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes.
        /// If `package_type` is not `container`, your token must also include the `repo` scope.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/packages#delete-a-package-for-the-authenticated-user)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "packages/delete-package-for-authenticated-user")
        }
    }
}
