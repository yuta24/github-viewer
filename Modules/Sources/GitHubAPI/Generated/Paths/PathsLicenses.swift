// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths {
    public static var licenses: Licenses {
        Licenses(path: "/licenses")
    }

    public struct Licenses {
        /// Path: `/licenses`
        public let path: String

        /// Get all commonly used licenses
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/licenses#get-all-commonly-used-licenses)
        public func get(parameters: GetParameters? = nil) -> Request<[GitHubAPI.LicenseSimple]> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "licenses/get-all-commonly-used")
        }

        public struct GetParameters {
            public var isFeatured: Bool?
            public var perPage: Int?
            public var page: Int?

            public init(isFeatured: Bool? = nil, perPage: Int? = nil, page: Int? = nil) {
                self.isFeatured = isFeatured
                self.perPage = perPage
                self.page = page
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(isFeatured, forKey: "featured")
                encoder.encode(perPage, forKey: "per_page")
                encoder.encode(page, forKey: "page")
                return encoder.items
            }
        }
    }
}
