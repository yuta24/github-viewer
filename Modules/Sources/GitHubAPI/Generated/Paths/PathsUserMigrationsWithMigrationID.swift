// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.User.Migrations {
    public func migrationID(_ migrationID: Int) -> WithMigrationID {
        WithMigrationID(path: "\(path)/\(migrationID)")
    }

    public struct WithMigrationID {
        /// Path: `/user/migrations/{migration_id}`
        public let path: String

        /// Get a user migration status
        ///
        /// Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:
        /// 
        /// *   `pending` - the migration hasn't started yet.
        /// *   `exporting` - the migration is in progress.
        /// *   `exported` - the migration finished successfully.
        /// *   `failed` - the migration failed.
        /// 
        /// Once the migration has been `exported` you can [download the migration archive](https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive).
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/migrations#get-a-user-migration-status)
        public func get(exclude: [String]? = nil) -> Request<GitHubAPI.Migration> {
            Request(method: "GET", url: path, query: makeGetQuery(exclude), id: "migrations/get-status-for-authenticated-user")
        }

        private func makeGetQuery(_ exclude: [String]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(exclude, forKey: "exclude")
            return encoder.items
        }
    }
}
