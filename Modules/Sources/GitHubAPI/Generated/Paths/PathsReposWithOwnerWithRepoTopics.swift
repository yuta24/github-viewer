// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo {
    public var topics: Topics {
        Topics(path: path + "/topics")
    }

    public struct Topics {
        /// Path: `/repos/{owner}/{repo}/topics`
        public let path: String

        /// Get all repository topics
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/repos#get-all-repository-topics)
        public func get(page: Int? = nil, perPage: Int? = nil) -> Request<GitHubAPI.Topic> {
            Request(method: "GET", url: path, query: makeGetQuery(page, perPage), id: "repos/get-all-topics")
        }

        private func makeGetQuery(_ page: Int?, _ perPage: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(page, forKey: "page")
            encoder.encode(perPage, forKey: "per_page")
            return encoder.items
        }

        /// Replace all repository topics
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/repos#replace-all-repository-topics)
        public func put(names: [String]) -> Request<GitHubAPI.Topic> {
            Request(method: "PUT", url: path, body: ["names": names], id: "repos/replace-all-topics")
        }
    }
}
