// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Users.WithUsername {
    public var hovercard: Hovercard {
        Hovercard(path: path + "/hovercard")
    }

    public struct Hovercard {
        /// Path: `/users/{username}/hovercard`
        public let path: String

        /// Get contextual information for a user
        ///
        /// Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.
        /// 
        /// The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:
        /// 
        /// ```shell
        ///  curl -u username:token
        ///   https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
        /// ```
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/users#get-contextual-information-for-a-user)
        public func get(subjectType: SubjectType? = nil, subjectID: String? = nil) -> Request<GitHubAPI.Hovercard> {
            Request(method: "GET", url: path, query: makeGetQuery(subjectType, subjectID), id: "users/get-context-for-user")
        }

        private func makeGetQuery(_ subjectType: SubjectType?, _ subjectID: String?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(subjectType, forKey: "subject_type")
            encoder.encode(subjectID, forKey: "subject_id")
            return encoder.items
        }

        public enum SubjectType: String, Codable, CaseIterable {
            case organization
            case repository
            case issue
            case pullRequest = "pull_request"
        }
    }
}
