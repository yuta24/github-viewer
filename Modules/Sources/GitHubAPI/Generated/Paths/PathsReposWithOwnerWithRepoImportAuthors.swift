// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Import {
    public var authors: Authors {
        Authors(path: path + "/authors")
    }

    public struct Authors {
        /// Path: `/repos/{owner}/{repo}/import/authors`
        public let path: String

        /// Get commit authors
        ///
        /// Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.
        /// 
        /// This endpoint and the [Map a commit author](https://docs.github.com/rest/reference/migrations#map-a-commit-author) endpoint allow you to provide correct Git author information.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/migrations#get-commit-authors)
        public func get(since: Int? = nil) -> Request<[GitHubAPI.PorterAuthor]> {
            Request(method: "GET", url: path, query: makeGetQuery(since), id: "migrations/get-commit-authors")
        }

        private func makeGetQuery(_ since: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(since, forKey: "since")
            return encoder.items
        }
    }
}
