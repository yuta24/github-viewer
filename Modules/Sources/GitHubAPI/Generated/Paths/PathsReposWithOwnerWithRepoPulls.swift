// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo {
    public var pulls: Pulls {
        Pulls(path: path + "/pulls")
    }

    public struct Pulls {
        /// Path: `/repos/{owner}/{repo}/pulls`
        public let path: String

        /// List pull requests
        ///
        /// Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/pulls#list-pull-requests)
        public func get(parameters: GetParameters? = nil) -> Request<[GitHubAPI.PullRequestSimple]> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "pulls/list")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        public struct GetParameters {
            public var state: State?
            public var head: String?
            public var base: String?
            public var sort: Sort?
            public var direction: Direction?
            public var perPage: Int?
            public var page: Int?

            public enum State: String, Codable, CaseIterable {
                case `open`
                case closed
                case all
            }

            public enum Sort: String, Codable, CaseIterable {
                case created
                case updated
                case popularity
                case longRunning = "long-running"
            }

            public enum Direction: String, Codable, CaseIterable {
                case asc
                case desc
            }

            public init(state: State? = nil, head: String? = nil, base: String? = nil, sort: Sort? = nil, direction: Direction? = nil, perPage: Int? = nil, page: Int? = nil) {
                self.state = state
                self.head = head
                self.base = base
                self.sort = sort
                self.direction = direction
                self.perPage = perPage
                self.page = page
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(state, forKey: "state")
                encoder.encode(head, forKey: "head")
                encoder.encode(base, forKey: "base")
                encoder.encode(sort, forKey: "sort")
                encoder.encode(direction, forKey: "direction")
                encoder.encode(perPage, forKey: "per_page")
                encoder.encode(page, forKey: "page")
                return encoder.items
            }
        }

        /// Create a pull request
        ///
        /// Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
        /// 
        /// To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.
        /// 
        /// This endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See "[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)" and "[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-rate-limits)" for details.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/pulls#create-a-pull-request)
        public func post(_ body: PostRequest) -> Request<GitHubAPI.PullRequest> {
            Request(method: "POST", url: path, body: body, id: "pulls/create")
        }

        public enum PostResponseHeaders {
            public static let location = HTTPHeader<String>(field: "Location")
        }

        public struct PostRequest: Encodable {
            /// The title of the new pull request. Required unless `issue` is specified.
            public var title: String?
            /// The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.
            public var head: String
            /// The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.
            public var base: String
            /// The contents of the pull request.
            public var body: String?
            /// Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
            public var maintainerCanModify: Bool?
            /// Indicates whether the pull request is a draft. See "[Draft Pull Requests](https://docs.github.com/en/articles/about-pull-requests#draft-pull-requests)" in the GitHub Help documentation to learn more.
            public var isDraft: Bool?
            /// An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless `title` is specified.
            public var issue: Int?

            public init(title: String? = nil, head: String, base: String, body: String? = nil, maintainerCanModify: Bool? = nil, isDraft: Bool? = nil, issue: Int? = nil) {
                self.title = title
                self.head = head
                self.base = base
                self.body = body
                self.maintainerCanModify = maintainerCanModify
                self.isDraft = isDraft
                self.issue = issue
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encodeIfPresent(title, forKey: "title")
                try values.encode(head, forKey: "head")
                try values.encode(base, forKey: "base")
                try values.encodeIfPresent(body, forKey: "body")
                try values.encodeIfPresent(maintainerCanModify, forKey: "maintainer_can_modify")
                try values.encodeIfPresent(isDraft, forKey: "draft")
                try values.encodeIfPresent(issue, forKey: "issue")
            }
        }
    }
}
