// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.AppManifests.WithCode {
    public var conversions: Conversions {
        Conversions(path: path + "/conversions")
    }

    public struct Conversions {
        /// Path: `/app-manifests/{code}/conversions`
        public let path: String

        /// Create a GitHub App from a manifest
        ///
        /// Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://docs.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/apps#create-a-github-app-from-a-manifest)
        public var post: Request<PostResponse> {
            Request(method: "POST", url: path, id: "apps/create-from-manifest")
        }

        public struct PostResponse: Decodable, Identifiable {
            /// Unique identifier of the GitHub app
            ///
            /// Example: 37
            public var id: Int
            /// The slug name of the GitHub app
            ///
            /// Example: "probot-owners"
            public var slug: String?
            /// Example: "MDExOkludGVncmF0aW9uMQ=="
            public var nodeID: String
            /// Simple User
            public var owner: GitHubAPI.NullableSimpleUser?
            /// The name of the GitHub app
            ///
            /// Example: "Probot Owners"
            public var name: String
            /// Example: "The description of the app."
            public var description: String?
            /// Example: "https://example.com"
            public var externalURL: URL
            /// Example: "https://github.com/apps/super-ci"
            public var htmlURL: URL
            /// Example: "2017-07-08T16:18:44-04:00"
            public var createdAt: Date
            /// Example: "2017-07-08T16:18:44-04:00"
            public var updatedAt: Date
            /// The set of permissions for the GitHub app
            ///
            /// Example:
            ///
            /// {
            ///   "deployments" : "write",
            ///   "issues" : "read"
            /// }
            public var permissions: [String: String]
            /// The list of events for the GitHub app
            ///
            /// Example: ["label", "deployment"]
            public var events: [String]
            /// The number of installations associated with the GitHub app
            public var installationsCount: Int?
            /// Example: "Iv1.25b5d1e65ffc4022"
            public var clientID: String?
            /// Example: "1d4b2097ac622ba702d19de498f005747a8b21d3"
            public var clientSecret: String?
            /// Example: "6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b"
            public var webhookSecret: String?
            /// Example: "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\n-----END RSA PRIVATE KEY-----\n"
            public var pem: String?

            public init(id: Int, slug: String? = nil, nodeID: String, owner: GitHubAPI.NullableSimpleUser? = nil, name: String, description: String? = nil, externalURL: URL, htmlURL: URL, createdAt: Date, updatedAt: Date, permissions: [String: String], events: [String], installationsCount: Int? = nil, clientID: String? = nil, clientSecret: String? = nil, webhookSecret: String? = nil, pem: String? = nil) {
                self.id = id
                self.slug = slug
                self.nodeID = nodeID
                self.owner = owner
                self.name = name
                self.description = description
                self.externalURL = externalURL
                self.htmlURL = htmlURL
                self.createdAt = createdAt
                self.updatedAt = updatedAt
                self.permissions = permissions
                self.events = events
                self.installationsCount = installationsCount
                self.clientID = clientID
                self.clientSecret = clientSecret
                self.webhookSecret = webhookSecret
                self.pem = pem
            }

            public init(from decoder: Decoder) throws {
                let values = try decoder.container(keyedBy: StringCodingKey.self)
                self.id = try values.decode(Int.self, forKey: "id")
                self.slug = try values.decodeIfPresent(String.self, forKey: "slug")
                self.nodeID = try values.decode(String.self, forKey: "node_id")
                self.owner = try values.decodeIfPresent(GitHubAPI.NullableSimpleUser.self, forKey: "owner")
                self.name = try values.decode(String.self, forKey: "name")
                self.description = try values.decodeIfPresent(String.self, forKey: "description")
                self.externalURL = try values.decode(URL.self, forKey: "external_url")
                self.htmlURL = try values.decode(URL.self, forKey: "html_url")
                self.createdAt = try values.decode(Date.self, forKey: "created_at")
                self.updatedAt = try values.decode(Date.self, forKey: "updated_at")
                self.permissions = try values.decode([String: String].self, forKey: "permissions")
                self.events = try values.decode([String].self, forKey: "events")
                self.installationsCount = try values.decodeIfPresent(Int.self, forKey: "installations_count")
                self.clientID = try values.decodeIfPresent(String.self, forKey: "client_id")
                self.clientSecret = try values.decodeIfPresent(String.self, forKey: "client_secret")
                self.webhookSecret = try values.decodeIfPresent(String.self, forKey: "webhook_secret")
                self.pem = try values.decodeIfPresent(String.self, forKey: "pem")
            }
        }
    }
}
