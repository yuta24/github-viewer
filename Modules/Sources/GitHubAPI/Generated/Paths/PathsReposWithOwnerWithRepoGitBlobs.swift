// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Git {
    public var blobs: Blobs {
        Blobs(path: path + "/blobs")
    }

    public struct Blobs {
        /// Path: `/repos/{owner}/{repo}/git/blobs`
        public let path: String

        /// Create a blob
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/git#create-a-blob)
        public func post(_ body: PostRequest) -> Request<GitHubAPI.ShortBlob> {
            Request(method: "POST", url: path, body: body, id: "git/create-blob")
        }

        public enum PostResponseHeaders {
            public static let location = HTTPHeader<String>(field: "Location")
        }

        public struct PostRequest: Encodable {
            /// The new blob's content.
            public var content: String
            /// The encoding used for `content`. Currently, `"utf-8"` and `"base64"` are supported.
            public var encoding: String?

            public init(content: String, encoding: String? = nil) {
                self.content = content
                self.encoding = encoding
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encode(content, forKey: "content")
                try values.encodeIfPresent(encoding, forKey: "encoding")
            }
        }
    }
}
