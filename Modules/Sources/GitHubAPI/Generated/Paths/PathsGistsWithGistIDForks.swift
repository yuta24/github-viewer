// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Gists.WithGistID {
    public var forks: Forks {
        Forks(path: path + "/forks")
    }

    public struct Forks {
        /// Path: `/gists/{gist_id}/forks`
        public let path: String

        /// List gist forks
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/gists#list-gist-forks)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.GistSimple]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "gists/list-forks")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }

        /// Fork a gist
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/gists#fork-a-gist)
        public var post: Request<GitHubAPI.BaseGist> {
            Request(method: "POST", url: path, id: "gists/fork")
        }

        public enum PostResponseHeaders {
            public static let location = HTTPHeader<String>(field: "Location")
        }
    }
}
