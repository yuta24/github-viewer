// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo {
    public var invitations: Invitations {
        Invitations(path: path + "/invitations")
    }

    public struct Invitations {
        /// Path: `/repos/{owner}/{repo}/invitations`
        public let path: String

        /// List repository invitations
        ///
        /// When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.
        ///
        /// [API method documentation](https://docs.github.com/rest/collaborators/invitations#list-repository-invitations)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.RepositoryInvitation]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "repos/list-invitations")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
