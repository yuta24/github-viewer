// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Commits.WithRef {
    public var status: Status {
        Status(path: path + "/status")
    }

    public struct Status {
        /// Path: `/repos/{owner}/{repo}/commits/{ref}/status`
        public let path: String

        /// Get the combined status for a specific reference
        ///
        /// Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.
        /// 
        /// 
        /// Additionally, a combined `state` is returned. The `state` is one of:
        /// 
        /// *   **failure** if any of the contexts report as `error` or `failure`
        /// *   **pending** if there are no statuses or a context is `pending`
        /// *   **success** if the latest status for all contexts is `success`
        ///
        /// [API method documentation](https://docs.github.com/rest/commits/statuses#get-the-combined-status-for-a-specific-reference)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<GitHubAPI.CombinedCommitStatus> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "repos/get-combined-status-for-ref")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
