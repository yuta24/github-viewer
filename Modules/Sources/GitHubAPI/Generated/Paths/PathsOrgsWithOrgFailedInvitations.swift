// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Orgs.WithOrg {
    public var failedInvitations: FailedInvitations {
        FailedInvitations(path: path + "/failed_invitations")
    }

    public struct FailedInvitations {
        /// Path: `/orgs/{org}/failed_invitations`
        public let path: String

        /// List failed organization invitations
        ///
        /// The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed and the reason for the failure.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/orgs#list-failed-organization-invitations)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.OrganizationInvitation]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "orgs/list-failed-invitations")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
