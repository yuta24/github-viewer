// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Issues.Comments {
    public func commentID(_ commentID: Int) -> WithCommentID {
        WithCommentID(path: "\(path)/\(commentID)")
    }

    public struct WithCommentID {
        /// Path: `/repos/{owner}/{repo}/issues/comments/{comment_id}`
        public let path: String

        /// Get an issue comment
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/issues#get-an-issue-comment)
        public var get: Request<GitHubAPI.IssueComment> {
            Request(method: "GET", url: path, id: "issues/get-comment")
        }

        /// Update an issue comment
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/issues#update-an-issue-comment)
        public func patch(body: String) -> Request<GitHubAPI.IssueComment> {
            Request(method: "PATCH", url: path, body: ["body": body], id: "issues/update-comment")
        }

        /// Delete an issue comment
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/issues#delete-an-issue-comment)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "issues/delete-comment")
        }
    }
}
