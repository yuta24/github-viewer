// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Pulls.WithPullNumber {
    public var files: Files {
        Files(path: path + "/files")
    }

    public struct Files {
        /// Path: `/repos/{owner}/{repo}/pulls/{pull_number}/files`
        public let path: String

        /// List pull requests files
        ///
        /// **Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/pulls#list-pull-requests-files)
        public func get(perPage: Int? = nil, page: Int? = nil) -> Request<[GitHubAPI.DiffEntry]> {
            Request(method: "GET", url: path, query: makeGetQuery(perPage, page), id: "pulls/list-files")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        private func makeGetQuery(_ perPage: Int?, _ page: Int?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(perPage, forKey: "per_page")
            encoder.encode(page, forKey: "page")
            return encoder.items
        }
    }
}
