// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Teams.WithTeamID.Discussions {
    public func discussionNumber(_ discussionNumber: Int) -> WithDiscussionNumber {
        WithDiscussionNumber(path: "\(path)/\(discussionNumber)")
    }

    public struct WithDiscussionNumber {
        /// Path: `/teams/{team_id}/discussions/{discussion_number}`
        public let path: String

        /// Get a discussion (Legacy)
        ///
        /// **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/rest/reference/teams#get-a-discussion) endpoint.
        /// 
        /// Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/teams#get-a-discussion-legacy)
        @available(*, deprecated, message: "Deprecated")
        public var get: Request<GitHubAPI.TeamDiscussion> {
            Request(method: "GET", url: path, id: "teams/get-discussion-legacy")
        }

        /// Update a discussion (Legacy)
        ///
        /// **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://docs.github.com/rest/reference/teams#update-a-discussion) endpoint.
        /// 
        /// Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/teams#update-a-discussion-legacy)
        @available(*, deprecated, message: "Deprecated")
        public func patch(_ body: PatchRequest? = nil) -> Request<GitHubAPI.TeamDiscussion> {
            Request(method: "PATCH", url: path, body: body, id: "teams/update-discussion-legacy")
        }

        public struct PatchRequest: Encodable {
            /// The discussion post's title.
            public var title: String?
            /// The discussion post's body text.
            public var body: String?

            public init(title: String? = nil, body: String? = nil) {
                self.title = title
                self.body = body
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encodeIfPresent(title, forKey: "title")
                try values.encodeIfPresent(body, forKey: "body")
            }
        }

        /// Delete a discussion (Legacy)
        ///
        /// **Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://docs.github.com/rest/reference/teams#delete-a-discussion) endpoint.
        /// 
        /// Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/teams#delete-a-discussion-legacy)
        @available(*, deprecated, message: "Deprecated")
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "teams/delete-discussion-legacy")
        }
    }
}
