// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.App.Installations.WithInstallationID {
    public var accessTokens: AccessTokens {
        AccessTokens(path: path + "/access_tokens")
    }

    public struct AccessTokens {
        /// Path: `/app/installations/{installation_id}/access_tokens`
        public let path: String

        /// Create an installation access token for an app
        ///
        /// Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.
        /// 
        /// You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/apps/#create-an-installation-access-token-for-an-app)
        public func post(_ body: PostRequest? = nil) -> Request<GitHubAPI.InstallationToken> {
            Request(method: "POST", url: path, body: body, id: "apps/create-installation-access-token")
        }

        public struct PostRequest: Encodable {
            /// List of repository names that the token should have access to
            public var repositories: [String]?
            /// List of repository IDs that the token should have access to
            ///
            /// Example: [1]
            public var repositoryIDs: [Int]?
            /// App Permissions
            ///
            /// The permissions granted to the user-to-server access token.
            ///
            /// Example:
            ///
            /// {
            ///   "contents" : "read",
            ///   "deployments" : "write",
            ///   "issues" : "read",
            ///   "single_file" : "read"
            /// }
            public var permissions: GitHubAPI.AppPermissions?

            public init(repositories: [String]? = nil, repositoryIDs: [Int]? = nil, permissions: GitHubAPI.AppPermissions? = nil) {
                self.repositories = repositories
                self.repositoryIDs = repositoryIDs
                self.permissions = permissions
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encodeIfPresent(repositories, forKey: "repositories")
                try values.encodeIfPresent(repositoryIDs, forKey: "repository_ids")
                try values.encodeIfPresent(permissions, forKey: "permissions")
            }
        }
    }
}
