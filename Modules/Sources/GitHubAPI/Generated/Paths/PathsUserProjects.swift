// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.User {
    public var projects: Projects {
        Projects(path: path + "/projects")
    }

    public struct Projects {
        /// Path: `/user/projects`
        public let path: String

        /// Create a user project
        ///
        /// Creates a user project board. Returns a `410 Gone` status if the user does not have existing classic projects. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/projects#create-a-user-project)
        public func post(_ body: PostRequest) -> Request<GitHubAPI.Project> {
            Request(method: "POST", url: path, body: body, id: "projects/create-for-authenticated-user")
        }

        public struct PostRequest: Encodable {
            /// Name of the project
            ///
            /// Example: "Week One Sprint"
            public var name: String
            /// Body of the project
            ///
            /// Example: "This project represents the sprint of the first week in January"
            public var body: String?

            public init(name: String, body: String? = nil) {
                self.name = name
                self.body = body
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encode(name, forKey: "name")
                try values.encodeIfPresent(body, forKey: "body")
            }
        }
    }
}
