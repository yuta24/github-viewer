// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Enterprises.WithEnterprise.Actions.RunnerGroups {
    public func runnerGroupID(_ runnerGroupID: Int) -> WithRunnerGroupID {
        WithRunnerGroupID(path: "\(path)/\(runnerGroupID)")
    }

    public struct WithRunnerGroupID {
        /// Path: `/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}`
        public let path: String

        /// Get a self-hosted runner group for an enterprise
        ///
        /// Gets a specific self-hosted runner group for an enterprise.
        /// 
        /// You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#get-a-self-hosted-runner-group-for-an-enterprise)
        public var get: Request<GitHubAPI.RunnerGroupsEnterprise> {
            Request(method: "GET", url: path, id: "enterprise-admin/get-self-hosted-runner-group-for-enterprise")
        }

        /// Update a self-hosted runner group for an enterprise
        ///
        /// Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.
        /// 
        /// You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#update-a-self-hosted-runner-group-for-an-enterprise)
        public func patch(_ body: PatchRequest? = nil) -> Request<GitHubAPI.RunnerGroupsEnterprise> {
            Request(method: "PATCH", url: path, body: body, id: "enterprise-admin/update-self-hosted-runner-group-for-enterprise")
        }

        public struct PatchRequest: Encodable {
            /// Name of the runner group.
            public var name: String?
            /// Visibility of a runner group. You can select all organizations or select individual organizations.
            public var visibility: Visibility?
            /// Whether the runner group can be used by `public` repositories.
            public var allowsPublicRepositories: Bool
            /// If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.
            public var isRestrictedToWorkflows: Bool
            /// List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.
            public var selectedWorkflows: [String]?

            /// Visibility of a runner group. You can select all organizations or select individual organizations.
            public enum Visibility: String, Codable, CaseIterable {
                case selected
                case all
            }

            public init(name: String? = nil, visibility: Visibility? = nil, allowsPublicRepositories: Bool? = nil, isRestrictedToWorkflows: Bool? = nil, selectedWorkflows: [String]? = nil) {
                self.name = name
                self.visibility = visibility
                self.allowsPublicRepositories = allowsPublicRepositories ?? false
                self.isRestrictedToWorkflows = isRestrictedToWorkflows ?? false
                self.selectedWorkflows = selectedWorkflows
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encodeIfPresent(name, forKey: "name")
                try values.encodeIfPresent(visibility, forKey: "visibility")
                try values.encodeIfPresent(allowsPublicRepositories, forKey: "allows_public_repositories")
                try values.encodeIfPresent(isRestrictedToWorkflows, forKey: "restricted_to_workflows")
                try values.encodeIfPresent(selectedWorkflows, forKey: "selected_workflows")
            }
        }

        /// Delete a self-hosted runner group from an enterprise
        ///
        /// Deletes a self-hosted runner group for an enterprise.
        /// 
        /// You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/actions#delete-a-self-hosted-runner-group-from-an-enterprise)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "enterprise-admin/delete-self-hosted-runner-group-from-enterprise")
        }
    }
}
