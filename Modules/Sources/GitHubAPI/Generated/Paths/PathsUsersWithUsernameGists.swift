// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Users.WithUsername {
    public var gists: Gists {
        Gists(path: path + "/gists")
    }

    public struct Gists {
        /// Path: `/users/{username}/gists`
        public let path: String

        /// List gists for a user
        ///
        /// Lists public gists for the specified user:
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/gists#list-gists-for-a-user)
        public func get(parameters: GetParameters? = nil) -> Request<[GitHubAPI.BaseGist]> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "gists/list-for-user")
        }

        public enum GetResponseHeaders {
            public static let link = HTTPHeader<String>(field: "Link")
        }

        public struct GetParameters {
            public var since: Date?
            public var perPage: Int?
            public var page: Int?

            public init(since: Date? = nil, perPage: Int? = nil, page: Int? = nil) {
                self.since = since
                self.perPage = perPage
                self.page = page
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(since, forKey: "since")
                encoder.encode(perPage, forKey: "per_page")
                encoder.encode(page, forKey: "page")
                return encoder.items
            }
        }
    }
}
