// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Orgs.WithOrg.Packages.WithPackageType.WithPackageName.Versions {
    public func packageVersionID(_ packageVersionID: Int) -> WithPackageVersionID {
        WithPackageVersionID(path: "\(path)/\(packageVersionID)")
    }

    public struct WithPackageVersionID {
        /// Path: `/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}`
        public let path: String

        /// Get a package version for an organization
        ///
        /// Gets a specific package version in an organization.
        /// 
        /// You must authenticate using an access token with the `packages:read` scope.
        /// If `package_type` is not `container`, your token must also include the `repo` scope.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/packages#get-a-package-version-for-an-organization)
        public var get: Request<GitHubAPI.PackageVersion> {
            Request(method: "GET", url: path, id: "packages/get-package-version-for-organization")
        }

        /// Delete package version for an organization
        ///
        /// Deletes a specific package version in an organization. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.
        /// 
        /// To use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:
        /// - If `package_type` is not `container`, your token must also include the `repo` scope.
        /// - If `package_type` is `container`, you must also have admin permissions to the container you want to delete.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/packages#delete-a-package-version-for-an-organization)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "packages/delete-package-version-for-org")
        }
    }
}
