// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.User.Starred.WithOwner {
    public func repo(_ repo: String) -> WithRepo {
        WithRepo(path: "\(path)/\(repo)")
    }

    public struct WithRepo {
        /// Path: `/user/starred/{owner}/{repo}`
        public let path: String

        /// Check if a repository is starred by the authenticated user
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/activity#check-if-a-repository-is-starred-by-the-authenticated-user)
        public var get: Request<Void> {
            Request(method: "GET", url: path, id: "activity/check-repo-is-starred-by-authenticated-user")
        }

        /// Star a repository for the authenticated user
        ///
        /// Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-verbs)."
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/activity#star-a-repository-for-the-authenticated-user)
        public var put: Request<Void> {
            Request(method: "PUT", url: path, id: "activity/star-repo-for-authenticated-user")
        }

        /// Unstar a repository for the authenticated user
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/activity#unstar-a-repository-for-the-authenticated-user)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "activity/unstar-repo-for-authenticated-user")
        }
    }
}
