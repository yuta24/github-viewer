// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Orgs.WithOrg {
    public var packages: Packages {
        Packages(path: path + "/packages")
    }

    public struct Packages {
        /// Path: `/orgs/{org}/packages`
        public let path: String

        /// List packages for an organization
        ///
        /// Lists all packages in an organization readable by the user.
        /// 
        /// To use this endpoint, you must authenticate using an access token with the `packages:read` scope.
        /// If `package_type` is not `container`, your token must also include the `repo` scope.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/packages#list-packages-for-an-organization)
        public func get(packageType: PackageType, visibility: Visibility? = nil) -> Request<[GitHubAPI.Package]> {
            Request(method: "GET", url: path, query: makeGetQuery(packageType, visibility), id: "packages/list-packages-for-organization")
        }

        private func makeGetQuery(_ packageType: PackageType, _ visibility: Visibility?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(packageType, forKey: "package_type")
            encoder.encode(visibility, forKey: "visibility")
            return encoder.items
        }

        public enum PackageType: String, Codable, CaseIterable {
            case npm
            case maven
            case rubygems
            case docker
            case nuget
            case container
        }

        public enum Visibility: String, Codable, CaseIterable {
            case `public`
            case `private`
            case `internal`
        }
    }
}
