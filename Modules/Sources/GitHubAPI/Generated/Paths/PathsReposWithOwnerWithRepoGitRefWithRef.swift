// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Git.Ref {
    public func ref(_ ref: String) -> WithRef {
        WithRef(path: "\(path)/\(ref)")
    }

    public struct WithRef {
        /// Path: `/repos/{owner}/{repo}/git/ref/{ref}`
        public let path: String

        /// Get a reference
        ///
        /// Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.
        /// 
        /// **Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/git#get-a-reference)
        public var get: Request<GitHubAPI.GitRef> {
            Request(method: "GET", url: path, id: "git/get-ref")
        }
    }
}
