// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Fetches information about an export of a codespace.
///
/// An export of a codespace. Also, latest export details for a codespace can be fetched with id = latest
public struct CodespaceExportDetails: Codable, Identifiable {
    /// State of the latest export
    ///
    /// Example: "succeeded | failed | in_progress"
    public var state: String?
    /// Completion time of the last export operation
    ///
    /// Example: "2021-01-01T19:01:12Z"
    public var completedAt: Date?
    /// Name of the exported branch
    ///
    /// Example: "codespace-monalisa-octocat-hello-world-g4wpq6h95q"
    public var branch: String?
    /// Git commit SHA of the exported branch
    ///
    /// Example: "fd95a81ca01e48ede9f39c799ecbcef817b8a3b2"
    public var sha: String?
    /// Id for the export details
    ///
    /// Example: "latest"
    public var id: String?
    /// Url for fetching export details
    ///
    /// Example: "https://api.github.com/user/codespaces/:name/exports/latest"
    public var exportURL: String?
    /// Web url for the exported branch
    ///
    /// Example: "https://github.com/octocat/hello-world/tree/:branch"
    public var htmlURL: String?

    public init(state: String? = nil, completedAt: Date? = nil, branch: String? = nil, sha: String? = nil, id: String? = nil, exportURL: String? = nil, htmlURL: String? = nil) {
        self.state = state
        self.completedAt = completedAt
        self.branch = branch
        self.sha = sha
        self.id = id
        self.exportURL = exportURL
        self.htmlURL = htmlURL
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.state = try values.decodeIfPresent(String.self, forKey: "state")
        self.completedAt = try values.decodeIfPresent(Date.self, forKey: "completed_at")
        self.branch = try values.decodeIfPresent(String.self, forKey: "branch")
        self.sha = try values.decodeIfPresent(String.self, forKey: "sha")
        self.id = try values.decodeIfPresent(String.self, forKey: "id")
        self.exportURL = try values.decodeIfPresent(String.self, forKey: "export_url")
        self.htmlURL = try values.decodeIfPresent(String.self, forKey: "html_url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(state, forKey: "state")
        try values.encodeIfPresent(completedAt, forKey: "completed_at")
        try values.encodeIfPresent(branch, forKey: "branch")
        try values.encodeIfPresent(sha, forKey: "sha")
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(exportURL, forKey: "export_url")
        try values.encodeIfPresent(htmlURL, forKey: "html_url")
    }
}
