// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// GitHub Actions Cache Usage by repository.
public struct ActionsCacheUsageByRepository: Codable {
    /// The repository owner and name for the cache usage being shown.
    ///
    /// Example: "octo-org/Hello-World"
    public var fullName: String
    /// The sum of the size in bytes of all the active cache items in the repository.
    ///
    /// Example: 2322142
    public var activeCachesSizeInBytes: Int
    /// The number of active caches in the repository.
    public var activeCachesCount: Int

    public init(fullName: String, activeCachesSizeInBytes: Int, activeCachesCount: Int) {
        self.fullName = fullName
        self.activeCachesSizeInBytes = activeCachesSizeInBytes
        self.activeCachesCount = activeCachesCount
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.fullName = try values.decode(String.self, forKey: "full_name")
        self.activeCachesSizeInBytes = try values.decode(Int.self, forKey: "active_caches_size_in_bytes")
        self.activeCachesCount = try values.decode(Int.self, forKey: "active_caches_count")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(fullName, forKey: "full_name")
        try values.encode(activeCachesSizeInBytes, forKey: "active_caches_size_in_bytes")
        try values.encode(activeCachesCount, forKey: "active_caches_count")
    }
}
