// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SelectedActions: Codable {
    /// Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.
    public var isGithubOwnedAllowed: Bool?
    /// Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.
    public var isVerifiedAllowed: Bool?
    /// Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`."
    public var patternsAllowed: [String]?

    public init(isGithubOwnedAllowed: Bool? = nil, isVerifiedAllowed: Bool? = nil, patternsAllowed: [String]? = nil) {
        self.isGithubOwnedAllowed = isGithubOwnedAllowed
        self.isVerifiedAllowed = isVerifiedAllowed
        self.patternsAllowed = patternsAllowed
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.isGithubOwnedAllowed = try values.decodeIfPresent(Bool.self, forKey: "github_owned_allowed")
        self.isVerifiedAllowed = try values.decodeIfPresent(Bool.self, forKey: "verified_allowed")
        self.patternsAllowed = try values.decodeIfPresent([String].self, forKey: "patterns_allowed")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(isGithubOwnedAllowed, forKey: "github_owned_allowed")
        try values.encodeIfPresent(isVerifiedAllowed, forKey: "verified_allowed")
        try values.encodeIfPresent(patternsAllowed, forKey: "patterns_allowed")
    }
}
