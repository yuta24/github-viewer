// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Autolink reference
///
/// An autolink reference.
public struct Autolink: Codable, Identifiable {
    public var id: Int
    /// The prefix of a key that is linkified.
    ///
    /// Example: "TICKET-"
    public var keyPrefix: String
    /// A template for the target URL that is generated if a key was found.
    ///
    /// Example: "https://example.com/TICKET?query=<num>"
    public var urlTemplate: String
    /// Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
    ///
    /// Example: true
    public var isAlphanumeric: Bool

    public init(id: Int, keyPrefix: String, urlTemplate: String, isAlphanumeric: Bool) {
        self.id = id
        self.keyPrefix = keyPrefix
        self.urlTemplate = urlTemplate
        self.isAlphanumeric = isAlphanumeric
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(Int.self, forKey: "id")
        self.keyPrefix = try values.decode(String.self, forKey: "key_prefix")
        self.urlTemplate = try values.decode(String.self, forKey: "url_template")
        self.isAlphanumeric = try values.decode(Bool.self, forKey: "is_alphanumeric")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(keyPrefix, forKey: "key_prefix")
        try values.encode(urlTemplate, forKey: "url_template")
        try values.encode(isAlphanumeric, forKey: "is_alphanumeric")
    }
}
