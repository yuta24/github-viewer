// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CombinedCommitStatus: Codable {
    public var state: String
    public var statuses: [SimpleCommitStatus]
    public var sha: String
    public var totalCount: Int
    /// Minimal Repository
    public var repository: MinimalRepository
    public var commitURL: URL
    public var url: URL

    public init(state: String, statuses: [SimpleCommitStatus], sha: String, totalCount: Int, repository: MinimalRepository, commitURL: URL, url: URL) {
        self.state = state
        self.statuses = statuses
        self.sha = sha
        self.totalCount = totalCount
        self.repository = repository
        self.commitURL = commitURL
        self.url = url
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.state = try values.decode(String.self, forKey: "state")
        self.statuses = try values.decode([SimpleCommitStatus].self, forKey: "statuses")
        self.sha = try values.decode(String.self, forKey: "sha")
        self.totalCount = try values.decode(Int.self, forKey: "total_count")
        self.repository = try values.decode(MinimalRepository.self, forKey: "repository")
        self.commitURL = try values.decode(URL.self, forKey: "commit_url")
        self.url = try values.decode(URL.self, forKey: "url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(state, forKey: "state")
        try values.encode(statuses, forKey: "statuses")
        try values.encode(sha, forKey: "sha")
        try values.encode(totalCount, forKey: "total_count")
        try values.encode(repository, forKey: "repository")
        try values.encode(commitURL, forKey: "commit_url")
        try values.encode(url, forKey: "url")
    }
}
