// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.
public struct DeploymentBranchPolicySettings: Codable {
    /// Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.
    public var isProtectedBranches: Bool
    /// Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.
    public var isCustomBranchPolicies: Bool

    public init(isProtectedBranches: Bool, isCustomBranchPolicies: Bool) {
        self.isProtectedBranches = isProtectedBranches
        self.isCustomBranchPolicies = isCustomBranchPolicies
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.isProtectedBranches = try values.decode(Bool.self, forKey: "protected_branches")
        self.isCustomBranchPolicies = try values.decode(Bool.self, forKey: "custom_branch_policies")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(isProtectedBranches, forKey: "protected_branches")
        try values.encode(isCustomBranchPolicies, forKey: "custom_branch_policies")
    }
}
