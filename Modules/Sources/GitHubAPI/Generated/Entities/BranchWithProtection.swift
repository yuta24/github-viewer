// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct BranchWithProtection: Codable {
    public var name: String
    public var commit: Commit
    public var links: Links
    public var isProtected: Bool
    /// Branch Protection
    public var protection: BranchProtection
    public var protectionURL: URL
    /// Example: "mas*"
    public var pattern: String?
    public var requiredApprovingReviewCount: Int?

    public struct Links: Codable {
        public var html: String
        public var this: URL

        public init(html: String, this: URL) {
            self.html = html
            self.this = this
        }

        public init(from decoder: Decoder) throws {
            let values = try decoder.container(keyedBy: StringCodingKey.self)
            self.html = try values.decode(String.self, forKey: "html")
            self.this = try values.decode(URL.self, forKey: "self")
        }

        public func encode(to encoder: Encoder) throws {
            var values = encoder.container(keyedBy: StringCodingKey.self)
            try values.encode(html, forKey: "html")
            try values.encode(this, forKey: "self")
        }
    }

    public init(name: String, commit: Commit, links: Links, isProtected: Bool, protection: BranchProtection, protectionURL: URL, pattern: String? = nil, requiredApprovingReviewCount: Int? = nil) {
        self.name = name
        self.commit = commit
        self.links = links
        self.isProtected = isProtected
        self.protection = protection
        self.protectionURL = protectionURL
        self.pattern = pattern
        self.requiredApprovingReviewCount = requiredApprovingReviewCount
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.name = try values.decode(String.self, forKey: "name")
        self.commit = try values.decode(Commit.self, forKey: "commit")
        self.links = try values.decode(Links.self, forKey: "_links")
        self.isProtected = try values.decode(Bool.self, forKey: "protected")
        self.protection = try values.decode(BranchProtection.self, forKey: "protection")
        self.protectionURL = try values.decode(URL.self, forKey: "protection_url")
        self.pattern = try values.decodeIfPresent(String.self, forKey: "pattern")
        self.requiredApprovingReviewCount = try values.decodeIfPresent(Int.self, forKey: "required_approving_review_count")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(name, forKey: "name")
        try values.encode(commit, forKey: "commit")
        try values.encode(links, forKey: "_links")
        try values.encode(isProtected, forKey: "protected")
        try values.encode(protection, forKey: "protection")
        try values.encode(protectionURL, forKey: "protection_url")
        try values.encodeIfPresent(pattern, forKey: "pattern")
        try values.encodeIfPresent(requiredApprovingReviewCount, forKey: "required_approving_review_count")
    }
}
