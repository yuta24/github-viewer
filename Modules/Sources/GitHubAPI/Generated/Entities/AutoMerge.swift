// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// The status of auto merging a pull request.
public struct AutoMerge: Codable {
    /// Simple User
    public var enabledBy: SimpleUser
    /// The merge method to use.
    public var mergeMethod: MergeMethod
    /// Title for the merge commit message.
    public var commitTitle: String
    /// Commit message for the merge commit.
    public var commitMessage: String

    /// The merge method to use.
    public enum MergeMethod: String, Codable, CaseIterable {
        case merge
        case squash
        case rebase
    }

    public init(enabledBy: SimpleUser, mergeMethod: MergeMethod, commitTitle: String, commitMessage: String) {
        self.enabledBy = enabledBy
        self.mergeMethod = mergeMethod
        self.commitTitle = commitTitle
        self.commitMessage = commitMessage
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.enabledBy = try values.decode(SimpleUser.self, forKey: "enabled_by")
        self.mergeMethod = try values.decode(MergeMethod.self, forKey: "merge_method")
        self.commitTitle = try values.decode(String.self, forKey: "commit_title")
        self.commitMessage = try values.decode(String.self, forKey: "commit_message")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(enabledBy, forKey: "enabled_by")
        try values.encode(mergeMethod, forKey: "merge_method")
        try values.encode(commitTitle, forKey: "commit_title")
        try values.encode(commitMessage, forKey: "commit_message")
    }
}
