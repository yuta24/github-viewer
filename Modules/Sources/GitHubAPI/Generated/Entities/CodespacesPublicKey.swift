// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// The public key used for setting Codespaces secrets.
public struct CodespacesPublicKey: Codable, Identifiable {
    /// The identifier for the key.
    ///
    /// Example: "1234567"
    public var keyID: String
    /// The Base64 encoded public key.
    ///
    /// Example: "hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs="
    public var key: String
    public var id: Int?
    /// Example: "https://api.github.com/user/keys/2"
    public var url: String?
    /// Example: "ssh-rsa AAAAB3NzaC1yc2EAAA"
    public var title: String?
    /// Example: "2011-01-26T19:01:12Z"
    public var createdAt: String?

    public init(keyID: String, key: String, id: Int? = nil, url: String? = nil, title: String? = nil, createdAt: String? = nil) {
        self.keyID = keyID
        self.key = key
        self.id = id
        self.url = url
        self.title = title
        self.createdAt = createdAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.keyID = try values.decode(String.self, forKey: "key_id")
        self.key = try values.decode(String.self, forKey: "key")
        self.id = try values.decodeIfPresent(Int.self, forKey: "id")
        self.url = try values.decodeIfPresent(String.self, forKey: "url")
        self.title = try values.decodeIfPresent(String.self, forKey: "title")
        self.createdAt = try values.decodeIfPresent(String.self, forKey: "created_at")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(keyID, forKey: "key_id")
        try values.encode(key, forKey: "key")
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(url, forKey: "url")
        try values.encodeIfPresent(title, forKey: "title")
        try values.encodeIfPresent(createdAt, forKey: "created_at")
    }
}
