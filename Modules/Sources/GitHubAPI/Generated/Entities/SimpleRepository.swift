// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct SimpleRepository: Codable, Identifiable {
    /// A unique identifier of the repository.
    ///
    /// Example: 1296269
    public var id: Int
    /// The GraphQL identifier of the repository.
    ///
    /// Example: "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
    public var nodeID: String
    /// The name of the repository.
    ///
    /// Example: "Hello-World"
    public var name: String
    /// The full, globally unique, name of the repository.
    ///
    /// Example: "octocat/Hello-World"
    public var fullName: String
    /// Simple User
    public var owner: SimpleUser
    /// Whether the repository is private.
    public var isPrivate: Bool
    /// The URL to view the repository on GitHub.com.
    ///
    /// Example: "https://github.com/octocat/Hello-World"
    public var htmlURL: URL
    /// The repository description.
    ///
    /// Example: "This your first repo!"
    public var description: String?
    /// Whether the repository is a fork.
    public var isFork: Bool
    /// The URL to get more information about the repository from the GitHub API.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World"
    public var url: URL
    /// A template for the API URL to download the repository as an archive.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
    public var archiveURL: String
    /// A template for the API URL to list the available assignees for issues in the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/assignees{/user}"
    public var assigneesURL: String
    /// A template for the API URL to create or retrieve a raw Git blob in the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
    public var blobsURL: String
    /// A template for the API URL to get information about branches in the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/branches{/branch}"
    public var branchesURL: String
    /// A template for the API URL to get information about collaborators of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
    public var collaboratorsURL: String
    /// A template for the API URL to get information about comments on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/comments{/number}"
    public var commentsURL: String
    /// A template for the API URL to get information about commits on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/commits{/sha}"
    public var commitsURL: String
    /// A template for the API URL to compare two commits or refs.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
    public var compareURL: String
    /// A template for the API URL to get the contents of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/contents/{+path}"
    public var contentsURL: String
    /// A template for the API URL to list the contributors to the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/contributors"
    public var contributorsURL: URL
    /// The API URL to list the deployments of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/deployments"
    public var deploymentsURL: URL
    /// The API URL to list the downloads on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/downloads"
    public var downloadsURL: URL
    /// The API URL to list the events of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/events"
    public var eventsURL: URL
    /// The API URL to list the forks of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/forks"
    public var forksURL: URL
    /// A template for the API URL to get information about Git commits of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
    public var gitCommitsURL: String
    /// A template for the API URL to get information about Git refs of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
    public var gitRefsURL: String
    /// A template for the API URL to get information about Git tags of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
    public var gitTagsURL: String
    /// A template for the API URL to get information about issue comments on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
    public var issueCommentURL: String
    /// A template for the API URL to get information about issue events on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
    public var issueEventsURL: String
    /// A template for the API URL to get information about issues on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/issues{/number}"
    public var issuesURL: String
    /// A template for the API URL to get information about deploy keys on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
    public var keysURL: String
    /// A template for the API URL to get information about labels of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/labels{/name}"
    public var labelsURL: String
    /// The API URL to get information about the languages of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/languages"
    public var languagesURL: URL
    /// The API URL to merge branches in the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/merges"
    public var mergesURL: URL
    /// A template for the API URL to get information about milestones of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/milestones{/number}"
    public var milestonesURL: String
    /// A template for the API URL to get information about notifications on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
    public var notificationsURL: String
    /// A template for the API URL to get information about pull requests on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/pulls{/number}"
    public var pullsURL: String
    /// A template for the API URL to get information about releases on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/releases{/id}"
    public var releasesURL: String
    /// The API URL to list the stargazers on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/stargazers"
    public var stargazersURL: URL
    /// A template for the API URL to get information about statuses of a commit.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
    public var statusesURL: String
    /// The API URL to list the subscribers on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/subscribers"
    public var subscribersURL: URL
    /// The API URL to subscribe to notifications for this repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/subscription"
    public var subscriptionURL: URL
    /// The API URL to get information about tags on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/tags"
    public var tagsURL: URL
    /// The API URL to list the teams on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/teams"
    public var teamsURL: URL
    /// A template for the API URL to create or retrieve a raw Git tree of the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
    public var treesURL: String
    /// The API URL to list the hooks on the repository.
    ///
    /// Example: "https://api.github.com/repos/octocat/Hello-World/hooks"
    public var hooksURL: URL

    public init(id: Int, nodeID: String, name: String, fullName: String, owner: SimpleUser, isPrivate: Bool, htmlURL: URL, description: String? = nil, isFork: Bool, url: URL, archiveURL: String, assigneesURL: String, blobsURL: String, branchesURL: String, collaboratorsURL: String, commentsURL: String, commitsURL: String, compareURL: String, contentsURL: String, contributorsURL: URL, deploymentsURL: URL, downloadsURL: URL, eventsURL: URL, forksURL: URL, gitCommitsURL: String, gitRefsURL: String, gitTagsURL: String, issueCommentURL: String, issueEventsURL: String, issuesURL: String, keysURL: String, labelsURL: String, languagesURL: URL, mergesURL: URL, milestonesURL: String, notificationsURL: String, pullsURL: String, releasesURL: String, stargazersURL: URL, statusesURL: String, subscribersURL: URL, subscriptionURL: URL, tagsURL: URL, teamsURL: URL, treesURL: String, hooksURL: URL) {
        self.id = id
        self.nodeID = nodeID
        self.name = name
        self.fullName = fullName
        self.owner = owner
        self.isPrivate = isPrivate
        self.htmlURL = htmlURL
        self.description = description
        self.isFork = isFork
        self.url = url
        self.archiveURL = archiveURL
        self.assigneesURL = assigneesURL
        self.blobsURL = blobsURL
        self.branchesURL = branchesURL
        self.collaboratorsURL = collaboratorsURL
        self.commentsURL = commentsURL
        self.commitsURL = commitsURL
        self.compareURL = compareURL
        self.contentsURL = contentsURL
        self.contributorsURL = contributorsURL
        self.deploymentsURL = deploymentsURL
        self.downloadsURL = downloadsURL
        self.eventsURL = eventsURL
        self.forksURL = forksURL
        self.gitCommitsURL = gitCommitsURL
        self.gitRefsURL = gitRefsURL
        self.gitTagsURL = gitTagsURL
        self.issueCommentURL = issueCommentURL
        self.issueEventsURL = issueEventsURL
        self.issuesURL = issuesURL
        self.keysURL = keysURL
        self.labelsURL = labelsURL
        self.languagesURL = languagesURL
        self.mergesURL = mergesURL
        self.milestonesURL = milestonesURL
        self.notificationsURL = notificationsURL
        self.pullsURL = pullsURL
        self.releasesURL = releasesURL
        self.stargazersURL = stargazersURL
        self.statusesURL = statusesURL
        self.subscribersURL = subscribersURL
        self.subscriptionURL = subscriptionURL
        self.tagsURL = tagsURL
        self.teamsURL = teamsURL
        self.treesURL = treesURL
        self.hooksURL = hooksURL
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(Int.self, forKey: "id")
        self.nodeID = try values.decode(String.self, forKey: "node_id")
        self.name = try values.decode(String.self, forKey: "name")
        self.fullName = try values.decode(String.self, forKey: "full_name")
        self.owner = try values.decode(SimpleUser.self, forKey: "owner")
        self.isPrivate = try values.decode(Bool.self, forKey: "private")
        self.htmlURL = try values.decode(URL.self, forKey: "html_url")
        self.description = try values.decodeIfPresent(String.self, forKey: "description")
        self.isFork = try values.decode(Bool.self, forKey: "fork")
        self.url = try values.decode(URL.self, forKey: "url")
        self.archiveURL = try values.decode(String.self, forKey: "archive_url")
        self.assigneesURL = try values.decode(String.self, forKey: "assignees_url")
        self.blobsURL = try values.decode(String.self, forKey: "blobs_url")
        self.branchesURL = try values.decode(String.self, forKey: "branches_url")
        self.collaboratorsURL = try values.decode(String.self, forKey: "collaborators_url")
        self.commentsURL = try values.decode(String.self, forKey: "comments_url")
        self.commitsURL = try values.decode(String.self, forKey: "commits_url")
        self.compareURL = try values.decode(String.self, forKey: "compare_url")
        self.contentsURL = try values.decode(String.self, forKey: "contents_url")
        self.contributorsURL = try values.decode(URL.self, forKey: "contributors_url")
        self.deploymentsURL = try values.decode(URL.self, forKey: "deployments_url")
        self.downloadsURL = try values.decode(URL.self, forKey: "downloads_url")
        self.eventsURL = try values.decode(URL.self, forKey: "events_url")
        self.forksURL = try values.decode(URL.self, forKey: "forks_url")
        self.gitCommitsURL = try values.decode(String.self, forKey: "git_commits_url")
        self.gitRefsURL = try values.decode(String.self, forKey: "git_refs_url")
        self.gitTagsURL = try values.decode(String.self, forKey: "git_tags_url")
        self.issueCommentURL = try values.decode(String.self, forKey: "issue_comment_url")
        self.issueEventsURL = try values.decode(String.self, forKey: "issue_events_url")
        self.issuesURL = try values.decode(String.self, forKey: "issues_url")
        self.keysURL = try values.decode(String.self, forKey: "keys_url")
        self.labelsURL = try values.decode(String.self, forKey: "labels_url")
        self.languagesURL = try values.decode(URL.self, forKey: "languages_url")
        self.mergesURL = try values.decode(URL.self, forKey: "merges_url")
        self.milestonesURL = try values.decode(String.self, forKey: "milestones_url")
        self.notificationsURL = try values.decode(String.self, forKey: "notifications_url")
        self.pullsURL = try values.decode(String.self, forKey: "pulls_url")
        self.releasesURL = try values.decode(String.self, forKey: "releases_url")
        self.stargazersURL = try values.decode(URL.self, forKey: "stargazers_url")
        self.statusesURL = try values.decode(String.self, forKey: "statuses_url")
        self.subscribersURL = try values.decode(URL.self, forKey: "subscribers_url")
        self.subscriptionURL = try values.decode(URL.self, forKey: "subscription_url")
        self.tagsURL = try values.decode(URL.self, forKey: "tags_url")
        self.teamsURL = try values.decode(URL.self, forKey: "teams_url")
        self.treesURL = try values.decode(String.self, forKey: "trees_url")
        self.hooksURL = try values.decode(URL.self, forKey: "hooks_url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(nodeID, forKey: "node_id")
        try values.encode(name, forKey: "name")
        try values.encode(fullName, forKey: "full_name")
        try values.encode(owner, forKey: "owner")
        try values.encode(isPrivate, forKey: "private")
        try values.encode(htmlURL, forKey: "html_url")
        try values.encodeIfPresent(description, forKey: "description")
        try values.encode(isFork, forKey: "fork")
        try values.encode(url, forKey: "url")
        try values.encode(archiveURL, forKey: "archive_url")
        try values.encode(assigneesURL, forKey: "assignees_url")
        try values.encode(blobsURL, forKey: "blobs_url")
        try values.encode(branchesURL, forKey: "branches_url")
        try values.encode(collaboratorsURL, forKey: "collaborators_url")
        try values.encode(commentsURL, forKey: "comments_url")
        try values.encode(commitsURL, forKey: "commits_url")
        try values.encode(compareURL, forKey: "compare_url")
        try values.encode(contentsURL, forKey: "contents_url")
        try values.encode(contributorsURL, forKey: "contributors_url")
        try values.encode(deploymentsURL, forKey: "deployments_url")
        try values.encode(downloadsURL, forKey: "downloads_url")
        try values.encode(eventsURL, forKey: "events_url")
        try values.encode(forksURL, forKey: "forks_url")
        try values.encode(gitCommitsURL, forKey: "git_commits_url")
        try values.encode(gitRefsURL, forKey: "git_refs_url")
        try values.encode(gitTagsURL, forKey: "git_tags_url")
        try values.encode(issueCommentURL, forKey: "issue_comment_url")
        try values.encode(issueEventsURL, forKey: "issue_events_url")
        try values.encode(issuesURL, forKey: "issues_url")
        try values.encode(keysURL, forKey: "keys_url")
        try values.encode(labelsURL, forKey: "labels_url")
        try values.encode(languagesURL, forKey: "languages_url")
        try values.encode(mergesURL, forKey: "merges_url")
        try values.encode(milestonesURL, forKey: "milestones_url")
        try values.encode(notificationsURL, forKey: "notifications_url")
        try values.encode(pullsURL, forKey: "pulls_url")
        try values.encode(releasesURL, forKey: "releases_url")
        try values.encode(stargazersURL, forKey: "stargazers_url")
        try values.encode(statusesURL, forKey: "statuses_url")
        try values.encode(subscribersURL, forKey: "subscribers_url")
        try values.encode(subscriptionURL, forKey: "subscription_url")
        try values.encode(tagsURL, forKey: "tags_url")
        try values.encode(teamsURL, forKey: "teams_url")
        try values.encode(treesURL, forKey: "trees_url")
        try values.encode(hooksURL, forKey: "hooks_url")
    }
}
