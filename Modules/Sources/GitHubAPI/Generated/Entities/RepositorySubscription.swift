// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Repository Invitation
///
/// Repository invitations let you manage who you collaborate with.
public struct RepositorySubscription: Codable {
    /// Determines if notifications should be received from this repository.
    ///
    /// Example: true
    public var isSubscribed: Bool
    /// Determines if all notifications should be blocked from this repository.
    public var isIgnored: Bool
    public var reason: String?
    /// Example: "2012-10-06T21:34:12Z"
    public var createdAt: Date
    /// Example: "https://api.github.com/repos/octocat/example/subscription"
    public var url: URL
    /// Example: "https://api.github.com/repos/octocat/example"
    public var repositoryURL: URL

    public init(isSubscribed: Bool, isIgnored: Bool, reason: String? = nil, createdAt: Date, url: URL, repositoryURL: URL) {
        self.isSubscribed = isSubscribed
        self.isIgnored = isIgnored
        self.reason = reason
        self.createdAt = createdAt
        self.url = url
        self.repositoryURL = repositoryURL
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.isSubscribed = try values.decode(Bool.self, forKey: "subscribed")
        self.isIgnored = try values.decode(Bool.self, forKey: "ignored")
        self.reason = try values.decodeIfPresent(String.self, forKey: "reason")
        self.createdAt = try values.decode(Date.self, forKey: "created_at")
        self.url = try values.decode(URL.self, forKey: "url")
        self.repositoryURL = try values.decode(URL.self, forKey: "repository_url")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(isSubscribed, forKey: "subscribed")
        try values.encode(isIgnored, forKey: "ignored")
        try values.encodeIfPresent(reason, forKey: "reason")
        try values.encode(createdAt, forKey: "created_at")
        try values.encode(url, forKey: "url")
        try values.encode(repositoryURL, forKey: "repository_url")
    }
}
