// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct GistCommit: Codable {
    /// Example: "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f"
    public var url: URL
    /// Example: "57a7f021a713b1c5a6a199b54cc514735d2d462f"
    public var version: String
    /// Simple User
    public var user: NullableSimpleUser?
    public var changeStatus: ChangeStatus
    /// Example: "2010-04-14T02:15:15Z"
    public var committedAt: Date

    public struct ChangeStatus: Codable {
        public var total: Int?
        public var additions: Int?
        public var deletions: Int?

        public init(total: Int? = nil, additions: Int? = nil, deletions: Int? = nil) {
            self.total = total
            self.additions = additions
            self.deletions = deletions
        }

        public init(from decoder: Decoder) throws {
            let values = try decoder.container(keyedBy: StringCodingKey.self)
            self.total = try values.decodeIfPresent(Int.self, forKey: "total")
            self.additions = try values.decodeIfPresent(Int.self, forKey: "additions")
            self.deletions = try values.decodeIfPresent(Int.self, forKey: "deletions")
        }

        public func encode(to encoder: Encoder) throws {
            var values = encoder.container(keyedBy: StringCodingKey.self)
            try values.encodeIfPresent(total, forKey: "total")
            try values.encodeIfPresent(additions, forKey: "additions")
            try values.encodeIfPresent(deletions, forKey: "deletions")
        }
    }

    public init(url: URL, version: String, user: NullableSimpleUser? = nil, changeStatus: ChangeStatus, committedAt: Date) {
        self.url = url
        self.version = version
        self.user = user
        self.changeStatus = changeStatus
        self.committedAt = committedAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.url = try values.decode(URL.self, forKey: "url")
        self.version = try values.decode(String.self, forKey: "version")
        self.user = try values.decodeIfPresent(NullableSimpleUser.self, forKey: "user")
        self.changeStatus = try values.decode(ChangeStatus.self, forKey: "change_status")
        self.committedAt = try values.decode(Date.self, forKey: "committed_at")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(url, forKey: "url")
        try values.encode(version, forKey: "version")
        try values.encodeIfPresent(user, forKey: "user")
        try values.encode(changeStatus, forKey: "change_status")
        try values.encode(committedAt, forKey: "committed_at")
    }
}
