// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct DiffEntry: Codable {
    /// Example: "bbcd538c8e72b8c175046e27cc8f907076331401"
    public var sha: String
    /// Example: "file1.txt"
    public var filename: String
    /// Example: "added"
    public var status: Status
    /// Example: 103
    public var additions: Int
    /// Example: 21
    public var deletions: Int
    /// Example: 124
    public var changes: Int
    /// Example: "https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt"
    public var blobURL: URL
    /// Example: "https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt"
    public var rawURL: URL
    /// Example: "https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e"
    public var contentsURL: URL
    /// Example: "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
    public var patch: String?
    /// Example: "file.txt"
    public var previousFilename: String?

    /// Example: "added"
    public enum Status: String, Codable, CaseIterable {
        case added
        case removed
        case modified
        case renamed
        case copied
        case changed
        case unchanged
    }

    public init(sha: String, filename: String, status: Status, additions: Int, deletions: Int, changes: Int, blobURL: URL, rawURL: URL, contentsURL: URL, patch: String? = nil, previousFilename: String? = nil) {
        self.sha = sha
        self.filename = filename
        self.status = status
        self.additions = additions
        self.deletions = deletions
        self.changes = changes
        self.blobURL = blobURL
        self.rawURL = rawURL
        self.contentsURL = contentsURL
        self.patch = patch
        self.previousFilename = previousFilename
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.sha = try values.decode(String.self, forKey: "sha")
        self.filename = try values.decode(String.self, forKey: "filename")
        self.status = try values.decode(Status.self, forKey: "status")
        self.additions = try values.decode(Int.self, forKey: "additions")
        self.deletions = try values.decode(Int.self, forKey: "deletions")
        self.changes = try values.decode(Int.self, forKey: "changes")
        self.blobURL = try values.decode(URL.self, forKey: "blob_url")
        self.rawURL = try values.decode(URL.self, forKey: "raw_url")
        self.contentsURL = try values.decode(URL.self, forKey: "contents_url")
        self.patch = try values.decodeIfPresent(String.self, forKey: "patch")
        self.previousFilename = try values.decodeIfPresent(String.self, forKey: "previous_filename")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(sha, forKey: "sha")
        try values.encode(filename, forKey: "filename")
        try values.encode(status, forKey: "status")
        try values.encode(additions, forKey: "additions")
        try values.encode(deletions, forKey: "deletions")
        try values.encode(changes, forKey: "changes")
        try values.encode(blobURL, forKey: "blob_url")
        try values.encode(rawURL, forKey: "raw_url")
        try values.encode(contentsURL, forKey: "contents_url")
        try values.encodeIfPresent(patch, forKey: "patch")
        try values.encodeIfPresent(previousFilename, forKey: "previous_filename")
    }
}
