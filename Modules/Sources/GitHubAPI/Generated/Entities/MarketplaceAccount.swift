// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct MarketplaceAccount: Codable, Identifiable {
    public var url: URL
    public var id: Int
    public var type: String
    public var nodeID: String?
    public var login: String
    public var email: String?
    public var organizationBillingEmail: String?

    public init(url: URL, id: Int, type: String, nodeID: String? = nil, login: String, email: String? = nil, organizationBillingEmail: String? = nil) {
        self.url = url
        self.id = id
        self.type = type
        self.nodeID = nodeID
        self.login = login
        self.email = email
        self.organizationBillingEmail = organizationBillingEmail
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.url = try values.decode(URL.self, forKey: "url")
        self.id = try values.decode(Int.self, forKey: "id")
        self.type = try values.decode(String.self, forKey: "type")
        self.nodeID = try values.decodeIfPresent(String.self, forKey: "node_id")
        self.login = try values.decode(String.self, forKey: "login")
        self.email = try values.decodeIfPresent(String.self, forKey: "email")
        self.organizationBillingEmail = try values.decodeIfPresent(String.self, forKey: "organization_billing_email")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(url, forKey: "url")
        try values.encode(id, forKey: "id")
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(nodeID, forKey: "node_id")
        try values.encode(login, forKey: "login")
        try values.encodeIfPresent(email, forKey: "email")
        try values.encodeIfPresent(organizationBillingEmail, forKey: "organization_billing_email")
    }
}
