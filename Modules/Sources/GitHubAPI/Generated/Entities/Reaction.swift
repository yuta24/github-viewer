// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

/// Reactions to conversations provide a way to help people express their feelings more simply and effectively.
public struct Reaction: Codable, Identifiable {
    public var id: Int
    /// Example: "MDg6UmVhY3Rpb24x"
    public var nodeID: String
    /// Simple User
    public var user: NullableSimpleUser?
    /// The reaction to use
    ///
    /// Example: "heart"
    public var content: Content
    /// Example: "2016-05-20T20:09:31Z"
    public var createdAt: Date

    /// The reaction to use
    ///
    /// Example: "heart"
    public enum Content: String, Codable, CaseIterable {
        case plus1 = "+1"
        case minus1 = "-1"
        case laugh
        case confused
        case heart
        case hooray
        case rocket
        case eyes
    }

    public init(id: Int, nodeID: String, user: NullableSimpleUser? = nil, content: Content, createdAt: Date) {
        self.id = id
        self.nodeID = nodeID
        self.user = user
        self.content = content
        self.createdAt = createdAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(Int.self, forKey: "id")
        self.nodeID = try values.decode(String.self, forKey: "node_id")
        self.user = try values.decodeIfPresent(NullableSimpleUser.self, forKey: "user")
        self.content = try values.decode(Content.self, forKey: "content")
        self.createdAt = try values.decode(Date.self, forKey: "created_at")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(nodeID, forKey: "node_id")
        try values.encodeIfPresent(user, forKey: "user")
        try values.encode(content, forKey: "content")
        try values.encode(createdAt, forKey: "created_at")
    }
}
